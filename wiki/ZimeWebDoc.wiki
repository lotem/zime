#summary zime-web 網頁輸入法文檔
#labels Featured,Phase-Support

= zime-web 網頁輸入法文檔 =

更新於：2009-08-20

---------------------------------------------------------------------

ZIME - ZIME Input Method Engine／中州韻輸入法套件

子項目之基於 GWT 與 Google Gears 開發的可定制網頁輸入法

中州式恕堂製 2009

項目主頁： http://zime.googlecode.com/

作者電郵： chen.sst@gmail.com

---------------------------------------------------------------------
==系統需求==

支持 Google Gears 的瀏覽器
    目前有 FireFox, Google Chrome, Internet Explorer, Safari
Python, SQLite 3
    用於生成數據庫文件。若下載製做好的 DB 文件則不必要

---------------------------------------------------------------------
==主要功能==

zime-web 是一款簡易的網頁輸入法平臺，為拼音類輸入法提供一組定制工具：

可由一組定義文件配置新的輸入法方案。

可由自擬的一組單字拼式定義，結合詞庫生成詞組的拼式。

可以一組正則表逹式定義輸入時對拼式變形的規則，以實現拼式的容錯，
或用一套詞典實現多種拼寫法。

輸入方式可選用常規的字母輸入、多鍵並擊的音節輸入。
未來計劃添加無序的注音輸入及形碼輸入。

---------------------------------------------------------------------
==安裝說明==

1.  造訪 ZIME 項目下載頁，下載 zime-web 壓縮包。

2.  在本地解壓縮後，用瀏覽器打開 zime_web.html。

3.  如果瀏覽器未支持 Google Gears，請點擊 Install Gears 鏈接安裝。

4.a 用 data/ 目錄的 *make* 安裝腳本，生成 DB 文件；
    需要事先安裝好 Python 和 SQLite 3。

    Python 下載頁： http://www.python.org/download/

    Windows 用戶請下載 Python 2.6.x，並安裝在默認路徑 C:\Python26。

    SQLite 下載頁： http://sqlite.org/download.html

    Windows 用戶不須安裝此項，zime-web 已自帶。

4.b 或者不必安裝以上工具，而使用下載來的數據庫文件。
    將得到的 zime#database 文件複製到 data/ 目錄下即可。

5.  用 data/ 目錄的 *deply* 安裝腳本，將 DB 文件佈署到 Google Gears。

    IE 用戶須在執行此步驟前關閉瀏覽器窗口。

    如果無合適的腳本可用，請按此
    [http://code.google.com/intl/zh-TW/apis/gears/api_database.html#directories 說明]
    找到 Google Gears 存放數據的目錄，
    
    手動將其下的文件`_null_.localdomain/file_0/zime#database`
    替換為 zime-web 中的 `data/zime#database`。

6.  重新打開 zime_web.html，中了。

---------------------------------------------------------------------
==用法提示==

介面最上方的下拉列表用於選擇已配置的輸入方案。形如：
{{{
   +--------+
   [拼音    ]
   |東風破  |
   |宮保拼音|
   +--------+
}}}
若要配置其他輸入法請參詳下文「自定義方案」章節。
以下先就拼音輸入法做說明。

下面一行的文本框是輸入緩衝區，顯示正在編輯的編碼。

輸入時會顯示一縱向候選菜單，按空格或數字序號鍵完成字詞錄入；
PgUp／PgDn、逗號／句號用於前後翻頁。

最下的編輯區是已錄入文本。

可以用 Tab 鍵在輸入緩衝區和編輯區之間切換，以對錄入文字進行編輯操作，
或進行大量字母、數字錄入。

錄入完畢後按 Ctrl + C 將已錄入文本複製到剪貼板。
也可按 Ctrl + Enter 全選編輯區內容，再手工剪切、複製。

目前尚不支持中文標點輸入。

【警告】
編輯區沒有自動保存文本的功能，請勿一次錄入大段文字。
鑑於 zime-web 是自由軟件，使用者應自行承擔數據意外丢失等風險。

---------------------------------------------------------------------
==方案推介==

===拼音===

這款拼音輸入法很樸素，但有一個不易覺察的特性，即是拼式的容錯。
使用容錯拼式可以迴避《漢語拼音方案》中一些不夠直觀、較難記憶的拼寫，
大大簡化拼寫規則。對拼音掌握得不好的朋友會有幫助。

例如：
{{{
女 nv ----> nyu
略 lue ---> lyue
六 liu ---> liou
會 hui ---> huei
位 wei ---> wui, uei, ui
文 wen ---> wun, uen, un
老 lao ---> lau
翁 weng --> wong, ong, wung, ung
用 yong --> iong, yung
意思 yisi -----> is
無知 wuzhi ----> uzh
影音 yingyin --> ing'in
}}}
標準拼式與兼容拼式可並行不悖。

另有一些針對方音制定的兼容拼寫：
{{{
積極 jiji -----> zyiji
全權 quanquan -> cyuanquan
小學 xiaoxue --> siaoxuo, syaoxuo
拼音 pinyin ---> pinyim
}}}
但受制於拼音系統，數量不多。

===東風破===

若要定製方言及古音韻的輸入法，東風破方案可為參考。

東風破拼寫法基於《韻畧易通》編排體例，是一款倣古的官話拼寫法。
詳見 ZIME 計劃主頁所登[http://spreadsheets.google.com/pub?key=pGtAy-ARL2t0xhaQhEW2dKw 《東風破字表》]

得益於 zime-web 的拼式變形機制，除字表中所擬拼法外，
在東風破方案中也可用一些類似現代音的拼寫：
{{{
gi ---> ji
giu --> ju
zhiu -> zju
}}}

===宮保拼音===

Combo Pinyin／宮保拼音，是大眾化的多鍵並擊式拼音輸入方案，
ZIME 計劃的又一主打產品，今已在 zime-web 中完美支持。

這套方案和拼音方案共用一套詞典，但是以音節為單位雙手多鍵並擊錄入，
以求提高輸入拼式的效率和舒適度。

使用宮保拼音，需要使用不存在鍵位衝突問題的標準英文鍵盤，
及按照特定鍵位佈局操作。

例如：

以標準打字指法，左手按下鍵面的 F 鍵，同時右手按下 M, K, L 三鍵，
此時輸入緩衝區顯示所按鍵在宮保拼音佈局中對應的拼碼組合 [gunG] 。
鬆開四指，便輸入了拼音 gong。

試試看：
{{{
gong -> 拼碼 [gunG] -> 擊鍵 F + M + K + L
bao --> 拼碼 [bao] --> 擊鍵 V + J + O
pin --> 拼碼 [pyn] --> 擊鍵 B + 空格 + K
yin --> 拼碼 [yn] ---> 擊鍵 空格 + K 
}}}

參考閱讀[http://zime.googlecode.com/files/combo-pinyin-doc.pdf 《宮保拼音入門指南》]

如果拼碼組合不成拼音音節，最後顯示所擊出的拼碼。
用退格鍵刪除也是以音節為單位的。

---------------------------------------------------------------------

歡迎就軟件的用法提問，針對軟件設計提出建議或回報程序錯誤。
預設的幾種方案和詞庫，乃作功能演示之用，若有缺字、缺詞、讀音不合等
數據上的問題請勿回報為程序錯誤。

如果你有興趣助力 zime-web 的開發，請按 ZIME 主頁所列電郵聯絡作者。

---------------------------------------------------------------------
==自定義方案==

如果你希望擴展 zime-web 的功能，把自己的方案加入其中，需要瞭解：

===術語===

以下所羅列的名詞特用於描述 zime-web 內部機制，莫作語言學術語解。

schema／方案
    一個方案文件描述一種輸入法的基本信息

dict／字典
    一份拼寫－單字對照表

    keyword／鍵字
        音節的標準拼式

    word／單字
        與音節對應的書寫形式，不限於一個漢字，如合音詞也可為單字

    key／鍵
        鍵字的序列，各鍵字以 / 區隔，用以對應詞組。由工具生成

language／語言
    實為帶詞頻的詞庫，不含語音信息（拼寫）。
    可為任意字典生成詞彙索引

    phrase／詞組
        語言中所列一詞條，可為單字或多字，記有詞頻

===定義文件的格式===

所有定義文件遵循：

1.  文件名任意。

2.  以 UTF-8 編碼的文本文件，UNIX 換行。

3.  以 # 起始的行為註釋行。# 必須是行中第一個字符。

4.  以 % 起始的行為指示行。% 必須是行中第一個字符。

    其中形如：
{{{
    %some-list begin
    ...
    %some-list end
}}}
    構成一個列表；
    單詞 some-list 為該列表的名稱，名稱中不含空白字符。
    begin／end 之間的非指示行為列表項。

    形如：
{{{
    %some-key values...
}}}
    的指示行，功用視指示詞 some-key 而定。

===所需定義項目===

定義文件分三類：語言定義、字典定義、方案定義。

一種語言可用於多部字典，一部字典可用於多套方案。
要配置一種新的輸入法，最少需要一份方案文件。

===方案定義===

起首為指示行 `%schema some-code 方案名`

其中 some-code是方案在程序內部使用的惟一的代號；
方案名 為方案下拉列表中顯示的名字。

可選的 `%use-dict some-code`

指明使用代碼為 some-code 的字典。若字典代碼同方案代碼可省略此行。

以下有若干指示行，包含值定義和列表定義，
是用來配置輸入方案用到的各種組件。

===zime-web 的結構===

程序中有數類可配置的組件，每類有若干功能不同的實現。

在方案定義中以指示行指定所選用者。

`%engine some-code`
    輸入法引擎組件，控制輸入的方式，可選用：

    roman／羅馬字
        用於以拉丁字母拼寫為主的輸入法

    combo／宮保拼音
        多鍵並擊式輸入拼式

    zhuyin／注音類輸入法（未實作）

    table／字形類輸入法（未實作）

`%parser some-code`
    拼式解析組件，控制解讀輸入字串的規則，可選用：

    simple／簡易
        以字典中的鍵字嘗試對輸入串做音節切分，可定義隔音規則

    mapping／映射
        可以正則式指定一組拼式變換規則，將變換後的拼式映射到鍵字

    pass-through／直通
        不將全部鍵字載入內存，每次輸入從字典中查詢。為形碼預留

===組件的配置值===

輸入引擎配置項

`%max-word-length N`
    方案所用字典中單字的最大長度，以 Unicode 字符計

`%max-keyword-length N`
    方案所用字典中鍵字的最大長度，以字符計

`%max-query-keywords N`
    為詞組生成鍵時所用最大鍵字數。通常取 4，即以前四字音輸入長詞

`%combo-keys  [ASDF JKL]`
    宮保拼音組合鍵集，也用於確定組合中各鍵的排列順序

`%combo-codes [bpmfiaoe]`
    與組合鍵一一對應的拼碼，鍵組對譯後的拼碼串用作輸入拼式

`%combo-space i`
    如果使用了空格作組合鍵，定義一個特定的拼碼組合輸出空格。
    依上例，空格鍵在組合中表示拼碼 i；而單擊一空格時，則又輸出空格

拼式解析配置項

`%delimiters ['- ]`
    羅馬字輸入的隔音符號。上例，[] 中的三種符號均可起隔音作用。
    宮保拼音只用第一個，且由程序自動添加

{{{
%split-rules begin
ng aeiou
%split-rules end
}}}
    鍵字切分規則列表。每行一條規則，由兩組字符組成。

    默認，取輸入串前端的最長鍵字。切分規則定義了例外情況。
    如在漢語拼音中，字母 n, g 是優先與其後的元音字母結合，
    即當取的最長鍵字末一字母是規則的前一組字符之一，
    而其後續字符又在規則的後一組字符內，則不取該鍵字。

    對於複雜的拼寫法，比如韻尾又可構成雙字母輔音，可依次使用多條規則

{{{
%spelling-rules begin
weng wong
(.*)ong $1ung
(.*)ao $1au
%spelling-rules end
}}}
    拼寫規則列表，用於映射拼式解析組件。

    將字典中的鍵碼依次應用一組正則替換而變形成該方案的拼寫法。
    每行以空白字符分隔兩項，以左項與鍵碼做完全匹配，
    若匹配則替換為右項。替換結果繼續施以下一條規則。
    如有以上三條規則，用拼音字典的方案將以拼式 wung 輸入「翁」音，
    以 dung 輸入「東」，以 dau 輸入「刀」，等等。但不能以原鍵碼輸入

{{{
%fuzzy-rules begin
(.*)iu $1iou
([jqx])i([aoe].*) $1$2
%fuzzy-rules end
}}}
    模糊規則列表，用於映射拼式解析組件。

    實現一種形式的模糊輸入，即兼容拼法。格式與拼寫規則相倣。
    應用一條替換規則後，替換前後的形式均為該方案的有效拼式，
    且均被施以後續規則。上例有 `liu = liou, jiu = jiou = jou`

    如果既有拼寫規則又有模糊規則，對應用拼寫規則後的結果施以模糊規則

===字典定義===

字典定義文件以此起始：

`%dict some-code 字典名`
    定義字典。some-code 為字典內部代號，字典名 為簡要說明性文字

`%use-language some-code`
    指明該字典將使用代號為 some-code 的語言生成詞彙索引。
    若字典代號同語言代號，此項可省略

{{{
%word-list begin
wu 無
mo *無
%word-list end
}}}
    單字表。每行以空白字符分隔鍵字和對應單字。多對多關係。

    空白字符可以是空格與制表符的任意組合。
    單字前置 `*`，可避免該項用於生成詞組，適於多音字中的罕用音

===語言定義===

語言定義文件以此起始：

`%language some-code 語言說明`
    定義語言。some-code 為語言內部代號

{{{
%phrase-list begin
詞條 N
%phrase-list end
}}}
    詞組列表。每行為空白分隔的一個詞組及其詞頻（非負整數）

---------------------------------------------------------------------
==數據生成工具==

build_gears_db.py 腳本，用於將定義文件導入數據庫 zime#database。

在控制台以此形式執行：
{{{
python build_gears_db.py 定義文件a.txt 定義文件b.txt ...
}}}
在支持 UTF-8 字符集的控制台上可用 -v 或 --verbose 選項輸出詳細信息。

如果文件 zime#database 不存在，將創建新文件，否則添加到已有數據庫。

對於方案定義、字典定義及語言定義，如果數據庫中已有代號相同的項目，
將首先完全刪除該項目，再導入新數據。

如果重新導入語言定義，則依賴於該語言的字典將失效，須重做詞彙索引。
導入語言定義應先於導入使用它的字典定義。

網頁 zime_web_setup.html 可用於導入方案定義而無需依賴腳本；
但由於 Javascript 效能欠佳，無法處理數據量大的字典定義和語言定義。

---------------------------------------------------------------------
==完==